# Модуль для работы с данными мемов и их фильтрацией

MEMES = []
MEME_SOURCES = ["vk"]

# Список ключевых слов, указывающих на новостной контент
NEWS_KEYWORDS = [
    "новости", "события", "происшествие", "состоялось", "сообщил", "заявил", "произошло",
    "сегодня", "вчера", "утро", "вечер", "день", "с 1", "с сегодняшнего", "с понедельника",
    "правительство", "политика", "экономика", "президент", "трамп", "сша", "россия", "москва",
    "приобрести", "компания", "стартап", "выпустить", "сообщает", "зафиксирован", "сбой",
    "планирует", "возвращаются", "сериал", "перезапустят", "ожидается", "цена", "подорожал",
    "работники", "музей", "соорудили", "канаде", "черепашка", "самый большой", "пёсель", "немецкий дог"
]

# Список ключевых слов, указывающих на офисную тематику и юмор
OFFICE_HUMOR_KEYWORDS = [
    "офис", "работа", "коллеги", "начальник", "босс", "собрание", "переговорка", "дедлайн",
    "понедельник", "пятница", "отпуск", "зарплата", "переработка", "кофе", "принтер",
    "it отдел", "программист", "разработка", "проект", "тимлид", "менеджер", "шутка", "юмор",
    "смешно", "мем", "хаха", "лол", "кек", "рофл"
]

def is_suitable_meme(meme):
    """
    Проверяет, подходит ли мем для показа.
    Мем должен быть связан с офисной тематикой, быть юмористическим и не содержать новостной контент.
    """
    text = meme.get("text", "").lower()
    image_url = meme.get("image_url", "")

    # Проверка на наличие текста или изображения
    if not text and not image_url:
        return False

    # Проверка на новостной контент
    for keyword in NEWS_KEYWORDS:
        if keyword in text:
            return False

    # Проверка на офисную тематику и юмор
    has_office_humor = False
    for keyword in OFFICE_HUMOR_KEYWORDS:
        if keyword in text:
            has_office_humor = True
            break

    if not has_office_humor:
        return False

    # Проверка на минимальную длину текста (чтобы исключить слишком короткие посты)
    if len(text.split()) < 3:
        return False

    return True
