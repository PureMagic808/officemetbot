# Модуль для работы с данными мемов и их фильтрацией

MEMES = []
MEME_SOURCES = ["vk"]

# Список ключевых слов, указывающих на нежелательный контент (грязь, насилие, порнография)
EXCLUDED_KEYWORDS = [
    "порно", "секс", "насилие", "убийство", "кровь", "грязь", "мат", "обнажённый", "изнасилование",
    "смерть", "труп", "наркотики", "алкоголизм", "пьянство", "сиськи", "член", "жопа"
]

# Список ключевых слов, указывающих на смешной контент для 18+ (без грязи)
HUMOR_KEYWORDS = [
    "шутка", "юмор", "смешно", "хаха", "лол", "кек", "рофл", "сарказм", "ирония",
    "отношения", "любовь", "развод", "свидание", "теща", "шутник", "взрослая жизнь",
    "работа", "офис", "коллеги", "начальник", "босс", "дедлайн", "переговорка",
    "кофе", "принтер", "it отдел", "программист", "проект", "тимлид", "менеджер"
]

def is_suitable_meme(meme):
    """
    Проверяет, подходит ли мем для показа.
    Мем должен быть смешным, подходить для 18+ аудитории и не содержать нежелательный контент.
    """
    text = meme.get("text", "").lower()
    image_url = meme.get("image_url", "")

    # Проверка на наличие текста или изображения
    if not text and not image_url:
        return False

    # Исключение нежелательного контента
    for keyword in EXCLUDED_KEYWORDS:
        if keyword in text:
            return False

    # Проверка на наличие юмористического контента
    has_humor = False
    for keyword in HUMOR_KEYWORDS:
        if keyword in text:
            has_humor = True
            break

    if not has_humor:
        return False

    # Проверка на минимальную длину текста (чтобы исключить слишком короткие посты)
    if len(text.split()) < 2:
        return False

    return True
